# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: R2 CI
on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build
    - run: npm run lint
#    - run: npm run jest  FIXME: will fail

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: build

    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      GKE_CLUSTER: r2-cluster
      GKE_REGION: us-west1
      IMAGE_NAME: r2

    steps:
    - uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.PROJECT_ID }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - run: gcloud container clusters get-credentials "$GKE_CLUSTER" --region "$GKE_REGION"

    # Build the Docker image
    - name: Build
      run: docker build --tag "gcr.io/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA" .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: docker push "gcr.io/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA"

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: kubectl set image deployment/$IMAGE_NAME $IMAGE_NAME="gcr.io/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA"
